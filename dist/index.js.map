{"version":3,"sources":["../src/index.js"],"names":["debug","require","mongoose","connect","config","get","useNewUrlParser","useUnifiedTopology","connection","once","app","use","bodyParser","urlencoded","extended","json","characterRouter","listen","module","exports","port","address"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AALA,MAAMA,QAAOC,QAAQ,OAAR,EAAiB,cAAjB,CAAb;;;AAOAC,mBAASC,OAAT,CAAiBC,iBAAOC,GAAP,CAAW,UAAX,CAAjB,EAAyC;AACvCC,mBAAiB,IADsB;AAEvCC,sBAAoB;AAFmB,CAAzC;;AAKA;AACAL,mBAASM,UAAT,CAAoBC,IAApB,CAAyB,MAAzB,EAAiC,YAAW;AAC1CT,QAAM,sDAAN;AACD,CAFD;;AAIA,MAAMU,MAAI,wBAAV;AACC;AACAA,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEA;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACAL,IAAIC,GAAJ,CAAQ,UAAR,EAAmBK,mBAAnB;;AAGD,MAAMC,SAAQP,IAAIO,MAAJ,CAAWb,iBAAOC,GAAP,CAAW,MAAX,CAAX,EAA8B,MAAI;AAC5CL,QAAO,6BAA4BI,iBAAOC,GAAP,CAAW,MAAX,CAAmB,WAAUD,iBAAOC,GAAP,CAAW,MAAX,CAAmB,OAAnF;AACH,CAFa,CAAd;;AAMAa,OAAOC,OAAP,GAAgBT,GAAhB;AACAQ,OAAOC,OAAP,CAAeC,IAAf,GAAoBH,OAAOI,OAAP,GAAiBD,IAArC","file":"index.js","sourcesContent":["const debug =require('debug')('server:debug');\r\nimport mongoose from 'mongoose';\r\nimport config from 'config';\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport characterRouter from './routes/character';\r\n\r\nmongoose.connect(config.get('database'), {\r\n  useNewUrlParser: true, \r\n  useUnifiedTopology: true \r\n});\r\n\r\n// callback when connection to mongodb is open\r\nmongoose.connection.once(\"open\", function() {\r\n  debug(\"MongoDB database connection established successfully\");\r\n});\r\n\r\nconst app=express();\r\n // support json encoded bodies in the req\r\n app.use(bodyParser.urlencoded({ extended: true}));\r\n\r\n //sets the limit of json bodies in the req body.\r\n app.use(bodyParser.json());\r\n app.use('/api/v1/',characterRouter);\r\n\r\n\r\nconst listen =app.listen(config.get('port'),()=>{\r\n    debug(`server is running on port ${config.get('port')} and in ${config.get('name')} mode`);\r\n})\r\n\r\n\r\n\r\nmodule.exports= app;\r\nmodule.exports.port=listen.address().port;"]}